---
title: "Tampa Bay data summary"
author: 
  - name: Marcus Beck, <mbeck@tbep.org>
institute: "Tampa Bay Estuary Program"
date: "`r Sys.Date()`"
format:
  html:
    theme: cosmo
    code-tools: 
      source: https://github.com/tbep-tech/BlueGAP-sandbox/blob/main/tbsum.qmd
execute:
  echo: false
  warning: false
filters:
  - lightbox

lightbox: auto
---

```{r}
#| include: false
library(tidyverse)
library(here)
library(sf)
library(mapview)
library(tbeptools)
library(plotly)

sf_use_s2(FALSE)

load(file = here('data/tbco.RData'))
load(file = here('data/tbshedcos.RData'))
load(file = here('data/tbshedzip.RData'))
load(file = here('data/tbshedtra.RData'))
load(file = here('data/tb03100206.RData'))

tbdat <- list(
    STORET = read_csv(here('data/raw/TB_STORET_sites_coordinates.csv'), col_types = 'cnn'),
    NWIS = read_csv(here('data/raw/TB_NWIS_sites_coordinates.csv'), col_types = 'cnn')
  ) %>% 
  enframe(name = 'source') %>%
  unnest('value') %>% 
  st_as_sf(coords = c('lon', 'lat'), crs = 4326)

tbdatshed <- tbdat[tbshed, ]
```

::: {.panel-tabset}

### Data by source, relative to TBEP boundaries

```{r}
mapview(tbshed, legend = F) + mapview(tbdat, zcol = 'source', layer.name = 'Source')
```

### Clipped to TBEP boundaries

```{r}
mapview(tbshed, legend = F) + mapview(tbdatshed, zcol = 'source', layer.name = 'Source')
```

### Summary by county

```{r}
mapview(tbshedcos, legend = F, label = 'NAME', col.regions = 'blue', alpha.regions = 0.4) + mapview(tbdatshed, zcol = 'source', layer.name = 'Source')
```

```{r}
toplo <- st_intersection(tbdatshed, tbshedcos) %>% 
  st_set_geometry(NULL) %>% 
  summarise(
    cnt = n(), 
    .by = c('source', 'NAME')
  )
p <- ggplot(toplo, aes(y = reorder(NAME, cnt), x = cnt, fill = source)) + 
  geom_col() + 
  scale_x_continuous(expand = c(0, 0)) + 
  scale_fill_viridis_d() +
  theme_minimal() + 
  theme(
    legend.position = 'top', 
    panel.grid.minor = element_blank()
  ) + 
  labs(
    x = 'Station count', 
    y = NULL, 
    fill= NULL
  )
ggplotly(p, tooltip = 'cnt')
```

### Summary by zip code

```{r}
mapview(tbshedzip, legend = F, label = 'Name', col.regions = 'blue', alpha.regions = 0.4) + mapview(tbdatshed, zcol = 'source', layer.name = 'Source')
```

```{r}
toplo <- st_intersection(tbdatshed, tbshedzip) %>% 
  st_set_geometry(NULL) %>% 
  summarise(
    cnt = n(), 
    .by = c('source', 'Name')
  )
misdat <- round(100 * nrow(toplo) / nrow(tbshedzip), 0)
```

`r misdat`% zip codes have data.

```{r}
p <- ggplot(toplo, aes(y = reorder(Name, cnt), x = cnt, fill = source)) + 
  geom_col() + 
  scale_x_continuous(expand = c(0, 0)) + 
  scale_fill_viridis_d() +
  theme_minimal() + 
  theme(
    legend.position = 'top', 
    panel.grid.minor = element_blank()
  ) + 
  labs(
    x = 'Station count', 
    y = NULL, 
    fill= NULL
  )
ggplotly(p, tooltip = 'cnt', height = 900)
```

### Summary by census tract

```{r}
mapview(tbshedtra, legend = F, label = 'Name', col.regions = 'blue', alpha.regions = 0.4) + mapview(tbdatshed, zcol = 'source', layer.name = 'Source')
```

```{r}
toplo <- st_intersection(tbdatshed, tbshedtra) %>% 
  st_set_geometry(NULL) %>% 
  summarise(
    cnt = n(), 
    .by = c('source', 'Name')
  )
misdat <- round(100 * nrow(toplo) / nrow(tbshedtra), 0)
```

`r misdat`% tracts have data.

```{r}
p <- ggplot(toplo, aes(y = reorder(Name, cnt), x = cnt, fill = source)) + 
  geom_col() + 
  scale_x_continuous(expand = c(0, 0)) + 
  scale_fill_viridis_d() +
  theme_minimal() + 
  theme(
    legend.position = 'top', 
    panel.grid.minor = element_blank()
  ) + 
  labs(
    x = 'Station count', 
    y = NULL, 
    fill= NULL
  )
ggplotly(p, tooltip = 'cnt', height = 1200)
```

### My data pull

Location of data pulling HUC 03100206 (should include all dates): https://www.waterqualitydata.us/#huc=03100206&sampleMedia=Water&characteristicType=Nutrient&mimeType=csv&dataProfile=resultPhysChem&providers=STORET

```{r}
tomap <- datraw %>% 
  select(OrganizationIdentifier, lat = ActivityLocation.LatitudeMeasure, lon = ActivityLocation.LongitudeMeasure) %>% 
  unique() %>% 
  filter(!is.na(lat)) %>% 
  st_as_sf(coords = c('lon', 'lat'), crs = 4326) %>% 
  st_geometry()

mapview(tomap)
```

:::